{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscription_id": {
            "defaultValue": "",
            "type": "String"
        },
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "storageAccounts_sawemono2laexamples_name": {
            "defaultValue": "sawemono2laexamples",
            "type": "String"
        },
        "storageAccounts_sawemono2laexamplessftp_name": {
            "defaultValue": "sawemono2laexamplessftp",
            "type": "String"
        },
        "servers_sqlserver_we_monolith2logicappexamples_name": {
            "defaultValue": "sqlserver-we-monolith2logicappexamples",
            "type": "String"
        },
        "namespaces_sbwemonolith2logicappsexamples_name": {
            "defaultValue": "sbwemonolith2logicappsexamples",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2021-11-01",
            "name": "[parameters('namespaces_sbwemonolith2logicappsexamples_name')]",
            "location": "West Europe",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": {
                "disableLocalAuth": false,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-08-01-preview",
            "name": "[parameters('servers_sqlserver_we_monolith2logicappexamples_name')]",
            "location": "westeurope",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "CloudSA6832d0da",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[parameters('storageAccounts_sawemono2laexamples_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "defaultToOAuthAuthentication": false,
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[parameters('storageAccounts_sawemono2laexamplessftp_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "defaultToOAuthAuthentication": false,
                "allowCrossTenantReplication": false,
                "isLocalUserEnabled": true,
                "isSftpEnabled": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('namespaces_sbwemonolith2logicappsexamples_name'), '/RootManageSharedAccessKey')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sbwemonolith2logicappsexamples_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('namespaces_sbwemonolith2logicappsexamples_name'), '/default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sbwemonolith2logicappsexamples_name'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('namespaces_sbwemonolith2logicappsexamples_name'), '/import-type-a')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sbwemonolith2logicappsexamples_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT5M",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P1D",
                "deadLetteringOnMessageExpiration": true,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 1,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('namespaces_sbwemonolith2logicappsexamples_name'), '/report-type-a')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sbwemonolith2logicappsexamples_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT5M",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 1,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/azureADOnlyAuthentications",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": true
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/default')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 1073741824,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "autoPauseDelay": 60,
                "requestedBackupStorageRedundancy": "Local",
                "minCapacity": 0.5,
                "maintenanceConfigurationId": "[concat('/subscriptions/', parameters('subscription_id'), '/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_WestEurope_DB_2')]",
                "isLedgerOn": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamples_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamples_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamplessftp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamplessftp_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamples_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamples_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamplessftp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamplessftp_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/localusers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamplessftp_name'), '/sftp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamplessftp_name'))]"
            ],
            "properties": {
                "hasSshPassword": true,
                "permissionScopes": [
                    {
                        "permissions": "rl",
                        "service": "blob",
                        "resourceName": "sftp"
                    }
                ],
                "homeDirectory": "/",
                "hasSharedKey": true,
                "hasSshKey": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamples_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamples_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamplessftp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamplessftp_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamples_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamples_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamplessftp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamplessftp_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2021-08-01-preview",
            "name": "[concat(parameters('servers_sqlserver_we_monolith2logicappexamples_name'), '/sqldb-we-monolith2logicappexamples/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlserver_we_monolith2logicappexamples_name'), 'sqldb-we-monolith2logicappexamples')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlserver_we_monolith2logicappexamples_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamples_name'), '/default/import')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sawemono2laexamples_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamples_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_sawemono2laexamplessftp_name'), '/default/sftp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sawemono2laexamplessftp_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sawemono2laexamplessftp_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}